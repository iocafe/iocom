[platformio]

src_dir = /coderoot/iocom/examples/uno/code

build_dir = /tmp/uno_ioboard_tmp

[env:ATmega328P]
build_type = release
platform = atmelavr
# board = ATmega328P
board = uno
framework = arduino
extra_scripts = pre:scripts/config_to_c_code.py

lib_extra_dirs = /coderoot/lib/arduino

# Build either with or without Pins library.
# Use "-I .../generic" to build without pins library
# Use "-I .../unoboard" to build with pins library and GPIO numbers for UNO.
#
# -D SERIAL_TX_BUFFER_SIZE=? and -D SERIAL_RX_BUFFER_SIZE=? set serial
# buffer sizes. The IOCOM RX buffer should be 256 bytes, but in practise
# smaller usually one works (in practise transferred data amounts are small).
# Optimal value for TX buffer is also 256 bytes, but this can be be dropped
# and worst what could happen is small delay in loop, but because of small
# data amount, this is also not expected. 

build_flags =
    -O3
    -Wall
    -Wl,-Map,/tmp/uno_ioboard_tmp/output.map
    -D OSAL_MINIMALISTIC=1
    -D SERIAL_RX_BUFFER_SIZE=64
    -D SERIAL_TX_BUFFER_SIZE=128
    -I /coderoot/eosal
    -I /coderoot/iocom
    -I /coderoot/pins
    -I /coderoot/iocom/examples/uno/config/include/unoboard
    -I /coderoot/iocom/examples/uno

monitor_speed = 115200
# upload_speed = 57600
